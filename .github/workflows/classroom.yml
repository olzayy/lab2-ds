name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: oracle
          java-version: "17"
          cache: "maven"

      - name: Build gateway
        working-directory: gateway
        run: mvn package

      - name: Docker gateway
        working-directory: gateway
        run: |
          docker build -t rsoi_lab2_gateway .

      - name: Save gateway as tar
        run: |
          docker save rsoi_lab2_gateway > rsoi_lab2_gateway.tar

      - name: Upload gateway
        uses: actions/upload-artifact@v4
        with:
          name: rsoi_lab2_gateway
          path: rsoi_lab2_gateway.tar

      - name: Build bonus
        working-directory: bonus
        run: mvn package

      - name: Docker bonus
        working-directory: bonus
        run: |
          docker build -t rsoi_lab2_bonus .

      - name: Save bonus as tar
        run: |
          docker save rsoi_lab2_bonus > rsoi_lab2_bonus.tar

      - name: Upload bonus
        uses: actions/upload-artifact@v4
        with:
          name: rsoi_lab2_bonus
          path: rsoi_lab2_bonus.tar

      - name: Build flight
        working-directory: flight
        run: mvn package

      - name: Docker flight
        working-directory: flight
        run: |
          docker build -t rsoi_lab2_flight .

      - name: Save flight as tar
        run: |
          docker save rsoi_lab2_flight > rsoi_lab2_flight.tar

      - name: Upload flight
        uses: actions/upload-artifact@v4
        with:
          name: rsoi_lab2_flight
          path: rsoi_lab2_flight.tar

      - name: Build ticket
        working-directory: ticket
        run: mvn package

      - name: Docker ticket
        working-directory: ticket
        run: |
          docker build -t rsoi_lab2_ticket .

      - name: Save ticket as tar
        run: |
          docker save rsoi_lab2_ticket > rsoi_lab2_ticket.tar

      - name: Upload ticket
        uses: actions/upload-artifact@v4
        with:
          name: rsoi_lab2_ticket
          path: rsoi_lab2_ticket.tar
  test:
    name: Testing
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: oracle
          java-version: "17"
          cache: "maven"

      - name: Run gateway tests
        working-directory: gateway
        run: mvn test

      - name: Run bonus tests
        working-directory: bonus
        run: mvn test

      - name: Run flight tests
        working-directory: flight
        run: mvn test

      - name: Run ticket tests
        working-directory: ticket
        run: mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download gateway
        uses: actions/download-artifact@v4
        with:
          name: rsoi_lab2_gateway

      - name: Download bonus
        uses: actions/download-artifact@v4
        with:
          name: rsoi_lab2_bonus

      - name: Download flight
        uses: actions/download-artifact@v4
        with:
          name: rsoi_lab2_flight

      - name: Download ticket
        uses: actions/download-artifact@v4
        with:
          name: rsoi_lab2_ticket

      - name: Get commit hash
        id: get_commit_hash
        run: echo "COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_SECRET_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} > ~/.ssh/known_hosts

      - name: Deploy to remote server
        run: |
          sshpass -p '${{secrets.SERVER_PASSWORD}}' scp rsoi_lab2_gateway.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/tmp
          sshpass -p '${{secrets.SERVER_PASSWORD}}' scp rsoi_lab2_bonus.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/tmp
          sshpass -p '${{secrets.SERVER_PASSWORD}}' scp rsoi_lab2_flight.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/tmp
          sshpass -p '${{secrets.SERVER_PASSWORD}}' scp rsoi_lab2_ticket.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/tmp
          sshpass -p '${{secrets.SERVER_PASSWORD}}' ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
          mkdir -p /app/rsoi_lab2
          docker ps --filter name=rsoi_lab2_* --filter status=running -aq | xargs docker stop | xargs docker rm
          cd /tmp
          docker load < rsoi_lab2_gateway.tar
          docker load < rsoi_lab2_bonus.tar
          docker load < rsoi_lab2_flight.tar
          docker load < rsoi_lab2_ticket.tar
          cd /app/rsoi_lab2
          docker run -d -p 8080:8080 --name rsoi_lab2_gateway_${{ env.COMMIT_HASH }} rsoi_lab2_gateway
          docker run -d -p 8050:8050 --name rsoi_lab2_bonus_${{ env.COMMIT_HASH }} rsoi_lab2_bonus
          docker run -d -p 8060:8060 --name rsoi_lab2_flight_${{ env.COMMIT_HASH }} rsoi_lab2_flight
          docker run -d -p 8070:8070 --name rsoi_lab2_ticket_${{ env.COMMIT_HASH }} rsoi_lab2_ticket
          sleep 200
          EOF

  autograding:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      #- uses: docker/setup-buildx-action@v2

      # TODO build and run unit tests

      #- name: Build images
      # timeout-minutes: 10
      # run: docker compose build

      - name: Run containers
        timeout-minutes: 5
        run: |
          docker compose up -d
          ./scripts/wait-script.sh
        env:
          WAIT_PORTS: 8080,8070,8060,8050

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v1/postman/collection.json
          environment: v1/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true

      #- name: Github auto grader mark
      #  uses: Romanow/google-sheet-autograder-marker@v1.0
      #  with:
      #    google_token: ${{secrets.GOOGLE_API_KEY}}
      #    sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
      #    homework_number: 2
      #    user_column: 'D'
      #    column_offset: 'F'
      #    mark: "'+"

      #- name: Stop containers
      #  if: always()
      #  continue-on-error: true
      #  run: docker compose down -v